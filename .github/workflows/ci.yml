name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: labo02_db
          MYSQL_USER: labo02
          MYSQL_PASSWORD: labo02
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -proot --silent"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=30
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping || exit 1"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=30

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install system tools
        run: |
          sudo apt-get update
          sudo apt-get install -y default-mysql-client

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..60}; do
            if mysql -h 127.0.0.1 -uroot -proot -e "SELECT 1" >/dev/null 2>&1; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Initialize schema (from db-init/)
        if: hashFiles('db-init/*.sql') != ''
        run: |
          cat db-init/*.sql | mysql -h 127.0.0.1 -uroot -proot labo02_db

      - name: Creer fichier .env
        run: |
          echo "DB_HOST=127.0.0.1" >> $GITHUB_ENV
          echo "DB_PORT=3306" >> $GITHUB_ENV
          echo "DB_NAME=labo02_db" >> $GITHUB_ENV
          echo "DB_USER=labo02" >> $GITHUB_ENV
          echo "DB_PASSWORD=labo02" >> $GITHUB_ENV
          echo "REDIS_HOST=127.0.0.1" >> $GITHUB_ENV
          echo "REDIS_PORT=6379" >> $GITHUB_ENV
          echo "REDIS_DB=0" >> $GITHUB_ENV

      - name: Add src to PYTHONPATH
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE/src" >> $GITHUB_ENV

      - name: Run tests
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_NAME: labo02_db
          DB_USER: labo02
          DB_PASSWORD: labo02
          REDIS_HOST: 127.0.0.1
          REDIS_PORT: 6379
          REDIS_DB: 0
          PYTHONPATH: ${{ github.workspace }}/src
        run: |
          pytest -q --maxfail=1 --disable-warnings

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml


